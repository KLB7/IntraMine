IntraMine July 21 2025
===========================

 - Save As (compress the file path at upper left first somehow)
 - TOC for Editor view of glossary
 - apply Gloss to Viewer display of glossary
 - test installation, especially Perl, more regularly
 - finish themes, barely half done
 - (?) add to dictionary

Check unshift in Editor: none found.

TOC for Editor view of glossary
=================================
At present, toc_local.pm#GetTextTOC() only does Gloss headings. I need the equivalent of intramine_viewer.pl#GetPrettyGlossaryFile() for the TOC part.
---
		if ($filePath =~ m![\\/]$GLOSSARYFILENAME$!i || $filePath =~ m![\\/]glossary.txt$!i)
			{
			GetPrettyGlossaryFile($formH, $peeraddress, $clientIsRemote, $allowEditing, $fileContents_R, undef);
---
This is moderately involved. I might wait a week or two. Second look, yes a lot of work there.
Still, Gloss shortcomings for the glossary are a bit embarrassing.

Save As
================
This one shouldn't be that hard, except for fitting another button in the Editor. We already have 8 buttons, 9 would be pushing it. I can drop Find, or Toggle, maybe. Or switch to a menu.
My feeling is that the button row is already too long, even though I shrank it a bit recently.
I could shrink the buttons a bit more, but they are already near minimum size. This is an interesting problem.
I think quite possibly the best solution is to shrink the file path at the left. If I can reduce it to just the file name that would free up enough space. So I'm back to that. How to do that???
File name plus: a border of some sort, or a >> doohickey, or hummingbirds, ??.
One thought, overwhelmingly other editors do NOT display the full path, but do make it available in some form or other.
Right now I just have three buttons in the Viewer, so that can stay. However, NINE buttons in the Editor is getting a bit much. VS Code for example synchs the selected file with the file browser, though it doesn't joggle the browser to show the current file - otherwise, there isn't even a way out of the box to display the file path. In notepad++, hovering over a tab shows a popup with the full path but it's not selectable.

Easier selection in tooltips
========================
The paths in my tooltips are barely selectable, takes practice. That's partly because they are flush left. Can I boost the left padding just for full paths, to make them more easily selectable? Right now it's annoyingly hard.
Job one: make it easier to select a full path. This could involve just putting some padding on the left of all tooltips.
C:\perlprogs\IntraMine\css_for_web_server\tooltip.css#8 or so, add
padding-left: 6px;
see how that works out: Gloss
That's actually better!

Consecutive tooltips
====================
Still hard to select though, tip goes away too easily. Mostly ok I think, except when one tip is directly above/below another, then there's a fight. One has to skip down past the lower link in order for the upper one to continue to display. This counts as a bug, can I fix it? I'm not quite sure what's happening there, let's take a look at showhint: it seems I don't have a global way of telling whether or not a tip is currently showing

Among other things, tip is showing if
document.addEventListener('mousemove', recordMousePosition);
has been called at tooltip.js#629
and hideTip calls
document.removeEventListener('mousemove', recordMousePosition);
so I think pushing in a new global
let tipIsShowing = false;
with maintenance in just those two places could work. Let's try:
Right at the top of showhint
if (tipIsShowing)
	{
	return;
	}
Test: seems quite stable now, no obvious problems. A serious problem would require refreshing the page. Note all tooltips are affected.
One minor problem as shown by lines 15 16 above, if dwell over 15 then move to 16 the tip for 16 doesn't pop up even if the tip for 15 goes away.
Possibly
showhintAtferSettingHTML around #584, so I will add
tipIsShowing = false;
around there: nope, not enough but I'll leave it since it's I think correct.
In all other cases I think the tip display is ok. What is preventing display for 15/16? Something about tip goes away and we hover over a new tip all at once, and while we're over a tip it's a single call to showhint not a repeated call.
Only consecutive tips such as 15/16 are affected, all others seem fine. So the 15/16 problem is more than half fixed. Can I do better?
I have
	if (tipIsShowing)
		{
		return;
		}
but perhaps I could hang around for a few msec to see what happens? If I knew how to program that woudn't be too hard.
But let's try it anyway. Right now the problem is still midly annoying. Could I be vaguer.
First let's try pushing down the tipIsShowing check to after the 100 msec timeout: that's at the top of showWithFreshPort. Still not good enough, tip doesn't show when it should. No harm done though. That's really the last opportunity to catch a tip showing, after that we get serious.
Possibly we're giving up too soon? 100 msec isn't very long.
Experimentally try 500 on showWithFreshPort: YES that's working.
Now try 300: mostly working, not always. Nuts. Try 400: a very slightly noticeable delay, but things are working properly. Try 200: a bit unreliable. Try 350: works almost always. I think I'll leave it at 350, the delay isn't too long and it gives the impression that work is being done. Retest, can be a bit spastic drat. I don't like using timers.
Is there another way to solve this?
Maybe use a second timer, set the first one back down to 100 and if tipIsShowing do a second 300 msec delay before checking again.
NOTE showWithFreshPort is async. Can I steal a wait function from somewhere?
---
// "sleep" for ms milliseconds.
function sleepABitMilliseconds(ms) {
	return new Promise(resolve => setTimeout(resolve, ms));
}
---
Nuts, not working well at all.
Did I miss a place where I should set tipIsShowing to false?
Taking that out.
---
	if (tipIsShowing)
		{
		// let retry = 0;
		// while (retry < 4 && tipIsShowing)
		// 	{
		// 	sleepABitMilliseconds(100);
		// 	++retry;
		// 	}

		sleepABitMilliseconds(300);
		if (tipIsShowing)
			{
			return;
			}
		}

---
The 350 delay when calling showWithFreshPort works most of the time. I just don't like having a 350 delay when it could be shorter, too bad the sleep didn't work. Not sure why.
Wild and whacky idea, let's make showhint async and do a sleep at the top if tipIsShowing: nope.
The simple 350 is all that works, so I'll leave it. Problem mostly solved.
Consecutive timeouts seem a bit problematic. I've put in a comment at tooltip.js#444 attempting to describe the problem. Faint hope that someone else will solve it.
Quick review of tooltip.js, I can't spot any other place where I need to set tipIsShowing, alas.

Truly it's time to push footnotes. Let's add a brief glossary entry, mainly a link to "Gloss.txt#Footnotes and citations". Done.
I think showhint pops also need a padding-right: 6px, try that: ok.
Documentation has been redone Tue Jul 22 2025 19:47:53.
I'm burned out on this sprint, time to ship as I keep saying. Tue Jul 22 2025 22:03:25.

Wed Jul 23 2025 09:29:53

TOC for glossary in Editor
============================
Time for a challenge, and a TOC in the Editor view of glossary files sounds like a good warmup.
Extract TOC making from intramine_viewer.pl#GetPrettyGlossaryFile(),
cook up a new TOC maker in toc_local.pm, call it GetGlossaryTOC().
Can't be that hard, right? Model after text or Perl TOC or whatnot, they are all much the same.

New global
my $GLOSSARYFILENAME = lc(CVal('GLOSSARYFILENAME'));
Init in intramine_editor.pl near top, pass to toc_local.pm and keep there as $GlossaryFileName.

First try, not bad but no jump from TOC to text position.
And of course that's because I forgot something, namely ++$lineNum;
OK now. Basically working fine.

Apply Gloss to a glossary file
==============================
This is like regular getprettytext but with a different TOC. How does the standalone version look?
Two weird things:
1. It's Glossed!
2. One of the images is buggered, no never mind it's ok.
So WHY is the standalone version of glossary.txt Glossed?
I have squished glossary files into regular text file handling. For each line,
if ($isGlossaryFile)
 - grab a TOC entry if any
and at the end,
AddGlossaryAnchor(\${lines[$i]});
whatever that means. Some fussing with id and href, not too complicated.
Looks doable, only question is whether it would slow down regular Views of Glossed .txt.
I think with a good regexp for the glossary term things should be ok. Will have to try.
Anyway, all of the hard work has already been done in gloss_to_html.pm#GetPrettyText()
so why not give it a try?
my $isGlossaryFile = IsGlossaryPath($filePath);
Needs to be replaced with arg brain fail taking a break....
Ok, ready for test: does Viewer apply Gloss to glossary_master.txt and glossary.txt?
Not yet. Why not? Didn't do the top end properly at Viewer #643.
Retest: YES.
AND is Viewer display slowed down? Not noticeably, pretty fast actually.

SO for the footnotes release we can mention:
 - Editor now has a proper table of contents when editing glossary files
 - Viewer now applies Gloss when displaying a glossary file
 - tooltips display more consistently when they appear one above the other on consecutive lines

I'm on a roll. But I'll leave Save As... for another day, I think.

Commit message for "footnotes" now mentions the above, though not in the title. We'll see.

It would be nice if when clicking on a TOC entry in the Viewer it flashed a line in the text where it went to, like the Editor. So it's on the list in my head at least.

This spring has lasted more than three weeks, time to GO.
Wed Jul 23 2025 20:30:39
Should I push now? I think why not. I don't think I forgot anything, although the code comments might not be perfectly up to date as usual.
9 PM Eastern, 6 PM Pacific seems like a good time, no? Wed Jul 23 2025 20:37:20 so wait a few minutes.

footnotes pushed
====================
PUSHED footnotes Wed Jul 23 2025 20:45:39.
And arg as is often the case I pushed without merging, then had to dance around a lot.
Anyway, it's gone to the great aether in the sky.

Viewer highlight on TOC jump
=======================
For a lark, how about that notion of Viewer highlights some text after clicking in TOC? I like that, draws the eye to what was wanted. How hard could it be, right? Mainly a JS thing.
Slightly tricky in the Editor, it restores selection. I should attempt the same even in the Viewer.
I think that's why I didn't do it in the Viewer. Is there another way besides selection? Surely there must be.
This maybe could be banged into shape:
---
 function highlightTextTemporarily(elementId, textToHighlight, durationMs) {
      const paragraph = document.getElementById(elementId);
      if (!paragraph) return;

      const originalHTML = paragraph.innerHTML; // Store original content

      // Replace instances of text with highlighted version
      const highlightedHTML = originalHTML.replace(
        new RegExp(textToHighlight, 'gi'), // 'gi' for global and case-insensitive
        `<mark class="highlight">${textToHighlight}</mark>`
      );
      paragraph.innerHTML = highlightedHTML;

      // Revert after a duration
      setTimeout(() => {
        paragraph.innerHTML = originalHTML;
      }, durationMs);
    }

    // Example usage:
    highlightTextTemporarily('myParagraph', 'temporarily', 3000); // Highlight "temporarily" for 3 seconds
---
---
    .highlight {
      background-color: yellow;
      transition: background-color 0.5s ease-out; /* Optional: for fading effect */
    }
---
Darn drat I don't have a function in the TOC, just an <a>. So I think I'm giving up on this for now.

Soo what other mischief can I get up to?

Thu Jul 24 2025 09:37:30
Strange, there were 6 leftover files for pushing after switching back to master and pushing footnotes, did I confuse GitHub Desktop with my mistaken push of the footnotes branch? Anyway, committed and pushed, and all seems ok. Lost my nice commit message though. But picked up 4 clones, which is as many as I ever get.

Could I have EM return a value? User types it in or picks from a menu I guess, ideally offer both. It's not hard to add a return line, which is mainly why I haven't bothered.

Maybe I'll take an education day? For the first time in several decades, feels like.
What would I like to learn today?
Not Perl please.
Fri Jul 25 2025 11:07:54
Turns out, nothing.

Towards a Save As, collapse the full path
===========================
Editor only, initially show
>> filename.txt
and if click on the >> show
<< C:\full\path\to\filename.txt.
This is mostly JavaScript.
intramine_editor.pl#342
Show full path ($title) as expandable / collapsible.
Let's start with the double chevrons: the green is a bit dark, should fix later, but looks ok.
Now make it work.
What do I want for the JS? A toggle on the image, and on the title
$title vs $fileName, expand.jpg vs contract.jpg, set the inner HTML on the image and the displayed title.
We are in span id="viewEditTitle", not sure if I need to make it display: inline-block but it won't hurt.

We have #viewEditTitle at main.css#715, it's already inline-block.
Want some JS on that span I think, NO just the chevron please.
So the img wants an onclick, access to other chevron, both $fileName and $title.
And the img wants to sort of replace itself, amiright?

Let's give the img an id? Or wrap it? I vote wrap it. But can't I just use viewEditTitle?
And entirely replace its contents?
---
<span id="viewEditTitle"><img src="expand.jpg">&nbsp;C:\perlprogs\IntraMine\docs\IntraMine July 21 2025.txt</span>
---
becomes
---
<span id="viewEditTitle" onclick="toggleFilePath(this, 'expand.jpg', 'contract.jpg', '$fileName', '$title'); return(false);"><img src="expand.jpg">&nbsp;$fileName</span>
---
I need to take the span viewEditTitle out of the template, put it in when replacing _TITLEHEADER_
was
<span id="viewEditTitle">_TITLEHEADER_</span>
$theBody =~ s!_TITLEHEADER_!<span id="viewEditTitle" onclick="toggleFilePath(this, 'expand.jpg', 'contract.jpg', '$fileName', '$title'); return(false);"><img src="expand.jpg">&nbsp;$fileName</span>!;

Put this in viewerStart.js I guess:
function toggleFilePath(el, expandImage, contractImage, expandText, contractText) {
	
}

---
<span id="viewEditTitle" onclick="toggleFilePath(this, 'expand.jpg', 'contract.jpg', 'IntraMine July 21 2025.txt', 'C:\perlprogs\IntraMine\docs\IntraMine July 21 2025.txt'); return(false);"><img src="expand.jpg">&nbsp;IntraMine July 21 2025.txt</span>
---
CRAP not viewerStart, cmViewerStart.js. DOUBLE CRAP I want the Editor.
WORKS! file name expands to full path, and reverse.
Need a cursor change on the chevron.
Entire path plus chevron respond to the onclick, but I think that's ok.
Maybe some tuneup needed, affordance could be improved.
Something on hover? Also, I would like to match more than just the image name.
---
<span id="viewEditTitle" onclick="toggleFilePath(this, 'expand.jpg', 'contract.jpg', 'IntraMine July 21 2025.txt', 'C:\perlprogs\IntraMine\docs\IntraMine July 21 2025.txt'); return(false);"><img src="expand.jpg">&nbsp;IntraMine July 21 2025.txt</span>
---
Test matching whole img element text: nope.
---
<span id="viewEditTitle" onclick="toggleFilePath(this, 'expand.jpg', 'contract.jpg', 'IntraMine July 21 2025.txt', 'C:\perlprogs\IntraMine\docs\IntraMine July 21 2025.txt'); return(false);"><img src="expand.jpg">&nbsp;IntraMine July 21 2025.txt</span>
---
Hmm, quotes are a problem. Fixed, look for single or double quotes.
Nice.
C:perlprogsIntraMinedocsIntraMine July 21 2025.txt
Copying the file path works, as hoped.
Why is the file path text bold?
main.css
---
#viewEditTitle {
	margin-right: 12px;
	display: inline-block;
	font-size: 1.2em;
	font-weight: bold;
}
---

So now I can add the Save As... button. Where? Possibly next to Save, either that or on the right.
As the likely least used button, rightmost seems better. I will try that first.

Hmm, Editor isn't highlighting the proper TOC entry down at the bottom. I'm in Towards as Save As, but the TOC entry just above Viewer highlight is being well highlighted. Can I fix that? Would probably take an hour or two, that's nasty. Oddly the Viewer is correct even though highlighting is harder there. Added a TOC entry, and now it's working again. That's too annoying to fix.

Save As
=================
So, how to do a Save As... button?
Much the same as Save, but will need to update the file path on success, and ask user if replace is wanted when file already exists. Not much more to it than that. Except the tricky part, a directory picker or even file/directory picker. Perhaps like Glosser? Not quite, need to be able to enter file name. So more like the New command on the Files page. There, no overwrite is allowed, seems like a Chrome message but I'm not sure, could be my message. I should allow overwrite though.
Can I spot overwrite for New... on the Files page?
---
# Returns ok, noname, badname, badchar, exists, error (latter if system trouble).
# Note this will not overwrite an existing file unless $formH->{'allowOverwrite'} is defined.
# (That's currently not supported.)
sub NewFile {
...
---
Let's see if I can support overwrite for New and Save As, starting with New.
newFileButton.js#243 currently reads
alert("Sorry, file already exists and IntraMine will not overwrite.");
So where in Upload do I have my nice overwrite confirm?
uploader.js#161, seems simple enough, let's do it for New.
First though, what does notepad++ do? It will allow the replace, as long as the file is not already open in notepad++. Maybe I could ignore that last small detail?

Save As... button is in. Now I just need the code behind....
Sat Jul 26 2025 18:17:57
editor.js#612.
I am somewhat confused. Upload uses a browser upload selector to select the directory. I want something more like Glosser which allows picking a directory or file. nay more like the Files New... picker. So I will work with that.
Most of the dir/file work is done by newFileButton.js, but it expects some JS to be already loaded since it's part of the Files page.
intramine_filetree.pl#NewFilePicker() #642 does the initial HTML for the dir/file picker.

I will need some additional JS, something like
<script src="jquery-3.4.1.min.js"></script>
<script src="jquery.easing.1.3.min.js"></script>
<script src="jqueryFileTree.js"></script>
<script src="saveAsButton"></script>
(not files or lru I think, but can add lru later I suppose)
And some CSS,
<link rel="stylesheet" type="text/css" href="jqueryFileTree.css" />
<link rel="stylesheet" type="text/css" href="newFileButton.css" />
( and maybe forms.css, not sure yet)

Starting a new branch nah I've already started in, do a backup instead. Done.

Do I want to use newFileButton.js or spin off something else? I should start with it, I suppose.
But I do need to change the main call, from requestNewFile to something like requestSaveAs.
The main call when user clicks ok is setFullPathFromPicker(), which isn't a great name because it goes on to make the new file.
C:perlprogsIntraMinedocsIntraMine July 21 2025.txt
Selection of the full path is slightly tricky, need to drag out when going l/r slightly beyond the text. Is there a better way? Somehow detect the drag and cancel the onclick.
Got something on a search for "javascript onclick cancel if drag", wil try: WORKS!
C:perlprogsIntraMinedocsIntraMine July 21 2025.txt
Yippee!
Mon Jul 28 2025 23:30:25
The chevrons look to be maybe a pixel or two high. Can we adjust?
Need an id on the images, dummy.
main.css#720 if you do it.
Or do
#viewEditTitle img {
	margin-bottom: -2px;
}
 - I think that did it nicely, yay again.
Mon Jul 28 2025 23:59:58
Not quite perfect, sometimes the green double-headed TOC expander img overlaps the file name, but that only happens in odd circumstances so I'll call it a small cosmetic bug and move on regardless.

GAH! We have lost the backslashes in the full file path display in the Editor (the Viewer is fine) - how did I not see that?
Let's DOUBLE the backslashes for the full $title, see if that works: 
C:\perlprogs\IntraMine\docs\IntraMine July 21 2025.txt
YAY that worked!

Having thought about it for a whole minute, I am going to spin off a new JS file saveAsButton.js, based on newFileButton.js.
Save As in intramine_editor.pl turns out to the essentially the same as Save, just different error messages. No, that can't be right can it? I need to detect file already exists.

I'm feeling slightly overwhelmed, this might take a while. I should write out a plan.
There will be niggling details, for example the $title and $path for the chevrons will have to be updated, unless I use some other approach.

Wed Jul 30 2025 15:46:33 just ordered 11 Celestial halfandhalf for about $55 from Ambrosia, we'll see.

Heading for 600 clones, so let's make that a goal. Finish Save As, that should put us over the top.
Wed Jul 30 2025 22:43:47

Why does newFileButton.js#requestNewFile() have so many error cases???
IntraMine July 21 2025.txt C:\perlprogs\IntraMine\docs\IntraMine July 21 2025.txt

Let's add the JS files in to intramine_editor.pl#FullFile() around #96 and #246:
Save As is not coming up yet, let's get it showing the files dialog next: 
editor.js#saveFileAs() needs writing.
Gah, this is getting complicated.
Now let's slap in _NEWFILEPICKER_, except rename it _SAVEASFILEPICKER_:
just slamming it in, see if anything works: not yet.
Now getting empty picker, with placeholder for drive list
I need to call initNewFileDialog(),
window.addEventListener("load", initNewFileDialog);
Calling that at the bottom of editor.js.
Not working yet. And I got lost again, drat.
---
Uncaught ReferenceError: initSaveAsDialog is not defined
    at editor.js:956:33
---
No comprendre. I can maybe hack that by moving inclusion of saveAsButton.js up:
Now getting
---
Uncaught ReferenceError: thePort is not defined
    at initSaveAsDialog (saveAsButton.js:32:40)
---
Try ourServerPort instead:
Now getting
---
Uncaught ReferenceError: currentSortOrder is not defined
    at showTree (jqueryFileTree.js:73:22)
---
Copying that function from files.js to saveAsButton.js:
No, that's wrong, I want to use the default sort order, how did I do that for New in Files?
I will blindly try
function currentSortOrder() {

    return("name_ascending");

}

And now we get
Failed to load resource: the server responded with a status of 404 (Not Found)
which I believe is the call at saveAsButton.js#initSaveAsDialog() around #30.
We're getting the drive list, but the callback to fill in the dir list isn't working.
I think I'm missing equivalent of intramine_filetree.pl
$RequestAction{'dir'} = \&GetDirsAndFiles; 					# $formH->{'dir'} is directory path
so throw it in intramine_editor.pl:
OK! Added a horrendous amount of code at the bottom of intramine_editor.pl and now the file picker is working.
Onwards.
Can I get a path out of that?
Full path: |C:/perlprogs/IntraMine/test/arble.txt|
So that's a yes.

Now tune up saveAsButton.js#requestFileSaveAs().
Interesting, intramine_filetree.pl#IsGoodFileName() actually does useful checking, should use it.
Do I want to keep duplicating code? Probs.
I think I will attempt to have saveAsButton.js#requestFileSaveAs() do a retry if file exists but user says ok.
I might also check that the chosen directory exists?
I'm going to borrow sendXHRequest from uploader.js, but skip the progress messages for now.
Rats, the uploader is complicated, can't I just do what a regular Save does? I will try that instead.

In requestFileSaveAs in saveAsButton.js, if get ok then call saveFile(newPath). Or something.
I really think I'd like to do a double query, first get back ok to save or already exists, then do the actual saveas if ok.
This is currently saveAsButton.js#saveFileAs(). Let's do it right.
saveFileAs will first check for ok or ok to overwrite, then call new function finallyDoTheSaveAs(newPath) with overwrite added to url if needed.
The first request will be req=oktosaveas.
I am at saveAsButton.js#finallyDoTheSaveAs(). saveFileAs(), which calls it, needs to be tested.

finallyDoTheSaveAs() still needs some work, Thu Jul 31 2025 22:07:34.
In particular, I don't know entirely what needs doing.
Certainly need to correct the displayed path at top left.
For that, instead of
toggleFilePath(this, 'expand.jpg', 'contract.jpg', '$fileName', '$title');
we want
toggleFilePath(this, 'expand.jpg', 'contract.jpg', '$fileName', '$title');
Either thePath or theEncodedPath
File name is not present yet, I think. I'm putting it in.
let theFileName = '_FILENAME_';
And I need to set thePath and theFileName after SaveAs, and somehow refresh the title display.
Now we have the slashes forward instead of reverse, can I fix that in toggleFilePath?
let pathWithBackslashes = thePath.replace(/\//g, "\\"); // Suggestion was "\\\\", sb "\\"
C:\perlprogs\IntraMine\docs\IntraMine July 21 2025.txt - works fine now.

I think I have a slight problem with showhint, perhaps only for images, if there are two on a line such as above #454, move from first on line to second and the second image doesn't show.
Fix that!

I've just realized that I will have to completely reload a file after a Save As, since the extension might change. Oh well. That should make things simpler, no?

So, how do I completely reload a page, asking for a different file?
I guess I can try loadFileIntoCodeMirror, that's part of the job.
I should also mess with path-related variables too, I think.

loadFileIntoCodeMirror(myCodeMirror, theEncodedPath);

Variables to update:
thePath
theFileName
theEncodedPath
pathForNotification
 - if I get lucky, that should be it.
I will try a hack just to get things going.
How to get file name from path?
Possible
var leafname= pathname.split('\\').pop().split('/').pop();
I will try that.

loadFileIntoCodeMirror doesn't quite do it, need to do all the other usual things too.
So I am doing all the other things too in saveAsButton.js#finallyDoTheSaveAs().

Let's test it out:
I would like a fresh test file:
C:\perlprogs\IntraMine\test\saveastest.txt
Save As: saveastest_1.txt, same folder: 
saveAsButton.js:13 initSaveAsDialog called.
saveAsButton.js:258 finallyDoTheSaveAs for path |C%3A%2Fperlprogs%2FIntraMine%2Ftest%2Fsaveastest_1.txt|
:43131/?req=loadTOC&file=C%2525253A%2525252Fperlprogs%2525252FIntraMine%2525252Ftest%2525252Fsaveastest_1.txt:1  Failed to load resource: the server responded with a status of 404 (Not Found)
 - have I forgotten to actually create the file at some point?
The new file was not created, even though the path looks correct, if somewhat FUCKED by unicode etc.
newFileButton.js#requestNewFile() does  encodeURIComponent(newFilePath), I will do the same. Shoot, did that.
Let's go to the back end: I don't see why SaveAs() didn't report an error.
I'm getting
Error, server reached but it returned an error!
Where is that message from???
Seems to be from
loadFileIntoCodeMirror or loadTOC, those are the only candidates.
So why was there no error before that?
I have added "awuarwithy" to the test file.
Trying again: same error, but oddly a complete reload and everything looks fine!
However, it's still the old file.
Aha a hint, the file was actually saved as
C:\perlprogs\IntraMine\bats\C%3A%2Fperlprogs%2FIntraMine%2Ftest%2Ftestofsaveas.txt
which is lovely, exactly the sort of problem I am least equipped to deal with.
intramine_filetree.pl#NewFile() doesn't do anything to the $path received.
AHA looks like I doubly encoded the path, once at saveAsButton.js#saveFileAs() #219 and again at finallyDoTheSaveAs #269.
Take out the first one at #219: same goddam error. Also the Ok button in the file picker isn't working.
However, we have progress, the new file was saved properly as c:\perlprogs\IntraMine\test\junksave.txt.
Again the loadTOC is failing, looks like standard % encoding trouble to me.
Looks like loadFileIntoCodeMirror wants the raw path, not encoded. Try that at newFileButton.js#323, use originalPath:
Getting close with junksave2.txt I think.
Full path displays as  C%3A%2Fperlprogs%2FIntraMine%2Ftest%2Fjunksave2.txt
And the actual save as file ended up as
c:\perlprogs\IntraMine\bats\C%3A%2Fperlprogs%2FIntraMine%2Ftest%2Fjunksave2.txt
which is starting to piss me off.
Also the chevron is borken, always showing full path. Arg.
The primary (working) load is done by editor.js#307,
---
window.addEventListener("load", function() {loadFileIntoCodeMirror(myCodeMirror, theEncodedPath);});
---
with
$encPath = &HTML::Entities::encode($encPath);
$theBody =~ s!_PATH_!$encPath!g;
$theBody =~ s!_ENCODEDPATH_!$encPath!g;
 - so what do I need to do???
Maybe remove ... nuts, head dead.
I will randomly and exhaustively try all possibilities until it works or I give up.
As usual.
Firstly I want the save to use the correct folder.
From intramine_editor.pl#SaveAs: Save As path: |C:/perlprogs/IntraMine/test/junksave3.txt|
The save as WORKED! Now to get a full reload.
If I'm reading things correctly, we just do
window.location.href = newurl;

Old href is eg
http://192.168.40.8:43131/Editor/?href=C:/perlprogs/IntraMine/docs/IntraMine%20July%2021%202025.txt#497
and we want to update just the /?href=()# part.
Let's write the Perl regex first
newHref =~ s!\/\?href=([^#]+)#!/?href=path#!;
Note to self, only    .^$*+?()[{\|   need escaping in regex outside of a character class, and only   ^-]\   inside one.
CODE
let oldHref = window.location.href;
let newHref = oldHref.replace(/\/\?href=([^#]+)#/, "/?href=" + path + "#");
ENDCODE
Test: I don't think it worked, drat.
Need to print out the newhref or figure out a better way.
Try an alert:
---
New href: |http://192.168.40.8:43131/Editor/?href=C%3A%2Fperlprogs%2FIntraMine%2Ftest%2Fjunksave5.txt#1|
---
Jeez, it worked perfectly this time for test/junksave5.txt, another Chrome lag?
Ok button in the file picker now works.
Anything else obviously broken? No.
Time for testing.
1. Save As with file changes unsaved: saved to new file, lost from old - I think this is correct behaviour
2. Save As with Unicode in file name - works
3. Save As with Unicode in dir name - works
4. Change extension - file is being saved, but not loaded, old file remains.
AHA! There is no trailing '#'. Fix that, saveAsButton.js#300: now it works.
A little more testing:
'''.txt was not trapped at first.
Technically it should be allowed? Yes, just can't save a file to the top of C: which is OK.
So bad char, bad name check out, as does missing name.
There is no way to deselect a directory, so never mind.
Fri Aug 01 2025 21:21:12
So that's it I think, Save As... is tested and working well enough.
Ship tomorrow, methinks.
Do I need to document that anywhere?
I need to redo the screenshot at Editor.txt#61.
Top of Editor.txt itself in the Editor.
Done, and docs regenerated. And regenerated again, as usual.
Ctrl+Alt+S to do a Save As would be nice.
Getting warm:
---
document.getElementById('myInput').addEventListener('keydown', function(e){
      
      if (e.keyCode == 13) {
          document.getElementById('addBtn').click()"
      }
    
    })
---
if (e.altKey && e.ctrlKey && e.key === 's') should do it.

document.getElementById('save-as-button').addEventListener('keydown', function(e){
      if (e.altKey && e.ctrlKey && e.key === 's')
		{
		saveFileAsWithPicker(path);
		}
    })
Let's add that at the bottom of saveAsButton.js: not working. Why would I limit the scope to just the button?
I will use window.addEventListener instead. And add e.preventDefault(); as the last line.
---
// Ctrl+Alt+S to Save As.
window.addEventListener('keydown', function(e){
	if (e.altKey && e.ctrlKey && e.key === 's')
		{
		// TEST ONLY
		console.log("Key press " + e.key);
		saveFileAsWithPicker(path);
		e.preventDefault();
		}
  })
---
Keys are coming through individually, but the "if" doesn't fire.
AHA path is not defined apparently.
The real problem is I was passing a path to the file picker, rather pointlessly since it determines the path after being called.
Restarting Editor, taking out the logs first: WORKS!
To be fair, I should mention Ctrl+Alt+S to Save As in Editor.txt somewhere.
AAnd I should also accept Ctrl+Shift+S which is found in VS Code. That at least is done.
Let's put in an accelerator key list in Editor.txt. With wee pictures of the buttons.
Done, plus a gif for the new chevron control.
Editor.txt is ok I guess, could use some reorg.
Sat Aug 02 2025 10:58:29




























