Status
=======
2020-02-27 22_40_46-Status.png
The Status page shows the status of all IntraMine servers, and has buttons to **Stop** and **Start** servers as well as an **Add** button if you need one more of a particular server. It should more accurately be called "Status and Control" I suppose, but status checking happens much more often than starting and stopping, and top-level names need to be short in order to fit in the top navigation bar.

There are also lists of New/Changed Files and Deleted Files at the bottom.

Starting, stopping, restarting
--------------------------------
Servers listed under "Page servers" have buttons for stopping, starting, and restarting. "Background servers" are listed, but can't be started, stopped, or added.

Adding
---------
To add a server, pick it from "Add one page server:" and click the **Add** button. Servers listed there include not only running servers but also servers with a zero Count field in data/serverlist (see next).

Reserved servers
-----------------
A server with a Count field of 0 ("reserved server") will not be started initially, but you can add one or more instances later. It won't appear in the top navigation bar or under the "Page servers" list until you start it - thereafter you can stop and restart it with the buttons for it in the "Page servers" list. Elsewhere in the docs you'll see these zero-count servers referred to as "delayed start" or even "zombie" servers.

A reserved server has a port number reserved for it, so it's guaranteed to start when you need it.

Small details
---------------
The Status page refreshes every 30 seconds, but during startup it refreshes once a second so you can tell more accurately when everything's started.

Any server that starts initially or is added later using "Add one page server:" will have an entry under Page servers or Background servers as appropriate. Those under Page servers will have Start and Stop buttons.

The server "lights" under the Status column will flash when a server is handling a request, but the duration of the flashing doesn't mean anything: an action could take a millisecond or a minute to handle, and in both cases the light will flash for a couple of seconds. To see a flash, if you're using IntraMine for its Search capabilities, change a source or text file that's in an indexed location and you'll see the "Watcher" server light up, roughly two to five seconds after the save. At that point the change will be indexed and will show up in search results.

Under the hood
===============
Server status updates sequence
------------------------------
In accordance with proper separation of duties and all that, the Status server doesn't know beans about which servers are running, let alone whether they're alive or not. That's handled by IntraMine's Main server (main file intramine_main.pl). Server status updates are done in conjunction with a refresh of the "New / Changed Files" and "Deleted Files" lists, pulled from the Main server and the Status server respectively. It all starts with a timer going off and calling status.js#refreshStatus():
1. status.js#refreshServerStatus() calls refreshStatus() through a timer, with refresh interval set by STATUS_REFRESH_MILLISECONDS in data/intramine_config.txt.
2. status.js#refreshStatus() issues a "req=filestatus" to the Status server via fetch(), and awaits response.
3. intramine_status.pl has set up a handler for that request when starting,
$RequestAction{'req|filestatus'} = \&FileStatusHTML;
and so intramine_status.pl#FileStatusHTML() is called. (As usual, the callback is detected and triggered in swarmserver.pm, see swarmserver.pm#HandleRequestAction().)
4. FileStatusHTML() returns lists of changed/new and deleted files. These lists are periodically updated by ReloadChangedDeletedFilesList() from a file that is updated by intramine_filewatcher.pl#SaveChangedFilesList().
5. status.js#refreshStatus() receives and displays the file list, and then calls status.js#refreshServerStatus()
6. refreshServerStatus() issues a fetch() call to the Main server (not the Status server), "req=serverstatus"
7. intramine_main.pl#SetUpRequestActionHandlers() has set up a handler for that,
$RequestAction{'req|serverstatus'} = \&ServerStatus;
and so intramine_main.pl#ServerStatus() is called in response to the "req=filestatus" request
8. intramine_main.pl#ServerStatus() creates HTML summary tables for Page servers and Background servers, and throws in some summary status lines at the top. That's all sent back to status.js#refreshServerStatus()...
9. ...which puts the received HTML on the Status page, and then adds in properly maintained Start/Stop/Restart buttons for all of the Page servers by calling addStartStopRefreshButtons().

API
=====
Everything on the Status page is done through requests to Main. So kindly see "IntraMine Main.txt#API" for the details.


---
contents.txt
---
