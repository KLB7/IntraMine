FLASH links
===============

makealink.gif
*Making a FLASH Link.*

When a source or text file is viewed with IntraMine, local or NAS file mentions within it will be turned into links, provided the file mentioned is in an indexed location. If it isn't, you'll need a full path to get a link. So needless to say indexing all the files you'll be interested in is strongly recommended. In the details below I'll assume a file is in an indexed directory unless a full path is used. For details on how to index folders, see "Configuring folders to index and monitor.txt".

Linking to other files
======================
For direct attached storage and NAS files, IntraMine implements FLASH links (Fast Local Automatic Source and text Hyperlinks): if you type just a file name in a text file or a source file, IntraMine will link it to the closest known instance of that file, from amongst all the files of interest to you. Files of interest are contained in the folders that are listed in your data/search_directories.txt file (which you tuned up before starting IntraMine the first time). And "closest" means the one that's the fewest number of directory moves up or down away from the file where you're typing.

Read on for full control over this new super power you have:)

This will be easier with a few definitions up front:
**Referencing file**: the source or text file where you're typing, and want to have a link to a target file.
**Target file**: is the file you want to link to.
**File specifier**: part of the path to the target file, always including the file name.
**Context**: this is the directory that holds the referencing file.
**File distance**: As you might guess, the "distance" between your referencing file and target file is just the number of directory moves up and down that it takes to go from one file to the other.
**Sufficient path**: a file name, plus optionally enough directory names in any order to uniquely identify a file. Plus optionally a drive letter (placed first so as not to confuse humans).

As an example, suppose you're writing in a log file at "C:/Project51/docs/202310 notes.txt": so that's your referencing file. If you write "main.cpp" in it, with or without quotes, that's a file specifier. If there's only one main.cpp in your Project 51 folder, that will be the target file. The full path to it might be "C:/Project51/src/main.cpp" for example. Your context folder would be the docs folder, "C:/Project51/docs/". And the file distance from 202310 notes.txt to main.cpp would be one up from the docs folder and one down into the src folder, a total of 2. If instead you wanted to refer to main.cpp in your Project999 folder, you could write Project999/main.cpp, and that would work if there's only on main.cpp file in the Project 999 folder.

Basically, IntraMine decides which file is meant as the target the same way you would, if you memorized the names and locations of all files on your system. It picks the closest one that's compatible with any path you provide, in other words the one that's at a minimum distance from your context.

By the way, even though I might lazily refer to a "partial path" on occasion, there's no need to include a rightmost-complete partial path: in a FLASH link file specifier, directories can be skipped, or out of order. If there's only one indexed instance of main.cpp in a /project999/ folder, then you can refer to it as project999/main.cpp and Gloss will come up with the right link automatically (for example, Q:/CppProjects/January/project999/source/main.cpp). And if your referencing file is in the project999 folder, then all you need is main.cpp. Not even quotes.

Just about any file name typed into a source or text file that's viewed with IntraMine's Viewer will become a link, provided it's in a folder that has been indexed. You can use double quotes around the file name (eg "Build your Elasticsearch index and run IntraMine.txt") to help the file name stand out in the original text, but that's optional. If the file is not in an indexed folder, you'll need to provide a full path to it, eg Q:\Old junk\badsort.js.

TABLE Link examples (assuming only one instance of main.cpp in each project folder)
File to link to		Referencing file (where you're typing)		What to type
main.cpp in P:/project51/src	P:/project51/docs/notes.txt				main.cpp
main.cpp in P:/project999/src	P:/project51/docs/notes.txt				project999/main.cpp
main.cpp in P:/project51/src	P:/project999/docs/notes.txt			project51/main.cpp
main.cpp in P:/project51/src	a file on some other drive				project51/main.cpp
Of course, if you have several copies of the project51 folder floating around, you'll need more of the path in the mention, eg Q:/project51/main.cpp if there's only one project51 folder on the Q: drive.

IntraMine's context-aware file selection isn't quite artificially intelligent however, so it won't handle "the main.cpp over in project27" properly if you're writing that in a file that's outside the project27 folder - you'll need to use something more resembling a path, such as project27/main.cpp.

One rare problem: if a file name contains another file name, you'll need to put the whole reference in quotes. An example from IntraMine itself is "gloss2html.pl for standalone Gloss files.txt": without the quotes there will be two separate links to gloss2html.pl and files.txt.

Video links are special
=====================
Gloss supports links to video files, but they are quite limited. Basically, no remote viewing is supported.

So if you're using IntraMine's Viewer or Editor or the Files page, video links only work on the PC where IntraMine is running. In fact, you won't get a link at all if you're accessing IntraMine remotely. Aside from that, they are proper FLASH links, so typically only the file name is needed.

Note if you want to use FLASH links for videos then the folders holding the videos need to be indexed. *Only versions of IntraMine after March 9 2024 can index videos* but if you're reading this after downloading IntraMine then you're good. If you need to re-index to pick up videos: remember to add any additional video directories to your data/search_directories.txt file; and then run bats/IM_INIT_INDEX.bat (no need to stop IntraMine first). Videos can be on locally attached drives or on mapped drives.

(When you click on a video link, IntraMine's Viewer will run a batch file to launch the video using your default video player.)

Video links are also now supported in gloss2html.pl, again in a limited way. In the folder containing the .txt files that you want to convert to .html, place any videos that you want links to in an /images/ subfolder - no other locations are supported. Then put the link in double quotes in your .txt document, eg "myvideo.mp4", where the link text is just the video name. If you copy the resulting HTML documents to another location and want the videos to play, you will need to also copy along the /images/ subfolder together with any contained video files and HTML stub files for the videos. The stub files are created when running gloss2html.pl and have the same names as the videos but with a .html extension, eg for myvideo.mp4 you will also find a file named myvideo.html in the /images/ folder. For more about generating HTML documents from .txt see "gloss2html.pl for standalone Gloss files.txt".

Alas, that's the best I can do for videos. However, using Windows File Explorer you can just double-click on a video and it plays, so unless your needs are very special (such as copying a set of documentation to a new hire's computer) you won't need video links in your Gloss files.

Linking to headings, functions, and classes in other files
===================================
A FLASH link can include a specific location in a file, specifically a heading in a text file or a function/method or class name in a source file. For the file specifier part, the same rules apply as for FLASH links above.

To link to a heading in a text file: Use a '#' or ':' to separate the file name from the heading, and enclose it all in quotes. For example, "Go2.txt#You might sometimes be delighted".

If you're linking to a function/method, you can optionally include parentheses to help the link stand out, and you don't need quotes. For example, autolinking_demo.pl#FindBestLinkFor() or autolinking_demo.pl#FindBestLinkFor or intramine_linker.pl:ShortenedClassAnchor().

You can link to classes and methods in much the same way, eg
googlesuggest.h#GSuggestCompletion for a class
googlesuggest.cpp#GSuggestCompletion for a constructor
googlesuggest.cpp#GSuggestCompletion::GSuggestCompletion also works for a constructor
googlesuggest.cpp#GSuggestCompletion::eventFilter() for a method
googlesuggest.cpp#GSuggestCompletion::eventFilter also gives a method link.

Linking to a line number in a file
===========================
You can also link to a specific line number in a file, eg autolinking_demo.pl#102 or viewer.js:431. As with headings, use a '#' or ':' to separate the file name from the number. However, no quotes are needed. Of course, line number links are fragile, but they can be handy for log file notes when tackling something difficult, and for error messages that contain line numbers such as those from Chrome.

Linking to directories
=========================
You might have directories that you want to check in on now and then, or provide a link to the whole directory for others to use. Perhaps a directory called "Changes" or "Notes" or "Docs" or "Latest Updates" or "To Do". With IntraMine, you can have FLASH links to local directories too. (By "local" is meant storage attached directly to your computer or available on a mapped drive on your Local Area Network.)

IntraMine's Viewer and Editor will show directory FLASH links. When clicked, an expanded view of the directory appears in a new browser tab, displayed with IntraMine's Files service. If the Files service isn't running, the directory will be shown using Windows File Explorer.

Directory FLASH links work much like the FLASH links for files described just above. The one big difference is you need to put your directory specifier in 'single' or "double" quotes. Put your wanted directory name in quotes, and precede it with a directory or two (or a drive specifier) if you don't want the closest instance of the directory. Separate names with forward or backward slashes, as you please. Leading or trailing slashes are not required. The directory path, if more than one directory name is included, doesn't have to be complete and the directory names don't have to be in order (although a drive letter if present has to be leftmost). The directory names are not case sensitive.

Directory FLASH links are implemented in IntraMine's Viewer and Editor.

In the rare case where a directory and a heading (in a text file) have the same name, the heading will win out. If you really want the directory, add a second directory name to the path. For example, if "Docs" takes you to the section called "Docs" instead of a listing for C:/Project51/Docs/, put in "Project51/Docs" and you'll get your directory link.

Here are some examples:
TABLE Directory FLASH link examples (with one instance of /Changes/ in each project folder)
Directory to link to	Referencing file (where you're typing)		What to type
C:/Projects/proj1/Changes/	C:/Projects/proj1/notes/Jan_2023.txt	"changes"
C:/Projects/proj99/Changes/	C:/Projects/proj99/notes/Jan_2023.txt	"changes"
C:/Projects/proj99/Changes/	C:/Projects/proj1/notes/Jan_2023.txt	"proj99/changes"

As an example of possible variations, "proj99/changes" could also be entered as "/Proj99/CHANGES/" or "changes\PROJ99" or "C:/projects/proj99/changes/".

Any directories you'd like to get at with a single click? Now you can.

Linking to headings in the same file
===============================
Heading links are only fully implemented in IntraMine's Viewer, and .txt files converted with gloss2html.pl. The Editor does not have links to headings within the same file.

Again "heading" here means heading in a text file, or a function or class in a source file. Headings in the same file are linked by the Viewer, but not by IntraMine's Editor.

In a text file:
To link to a heading in the same text (.txt)file, put it in "double quotes".

In a source file:
The links to functions and classes within the same file will happen on their own. No quotes are needed in either source or comments.

As an example, "Images" will be a link to a section following this one. When you start using IntraMine you'll see same-file links to functions and classes in your source files.

Web links
=================
Web links are full auto, with no need to type double quotes or anything extra. Any text starting with http:// or https:// will become a link. Such as http://google.com.

In views of text files (.txt), Markdown files (.md), and POD files (.pod) IntraMine also supports Markdown-style web links of the form [Displayed name](URL) such as [Google](https://www.google.com).

Perl Module links
==================
Since IntraMine is Perl-based, we have to sneak in a little extra for Perl file viewing. So in Perl files if you "use" a module, you'll get a link to the corresponding file on your system. If you installed the module using cpan (or cpanm etc) you'll also get a link to metacpan.org for the modules. And if it's a module you wrote and are storing locally, there will also be a "pencil" icon link to open the file for editing.
2019-11-19 12_14_06-gloss2html.pl.png

(In the Editor, instead of a pencil icon you'll see a "purple patch" at the right end of the link that reads "Edit" if you hover over it, clicking there will open the file for editing.
purplepatch.png
)

On-demand linking
=====================
Context-aware FLASH linking based on partial paths takes a bit of code, and can be slow when doing several thousand lines in one go. IntraMine's Viewer avoids any slowdown by doing on-demand file linking, so that lines of text are processed only when they become visible, and only once. However, the Editor does clear all links and redo the links for visible lines after an editing "spurt" is finished.

Images
------
Image file names are given special treatment:
 - with IntraMine's Viewer, by default you get an "image hover," which is a popup view of the image in your browser window that appears when you pause the mouse cursor over the image file name. Clicking on the image name will produce a view of the image in a new browser tab. In text files there's an "Inline Images" button at the top that lets you switch to full display of the images. 
 - in standalone HTML files generated by gloss2html.pl, the choice of image hovers or inlined images is made when you run the program: the default is hovers, add "-i" to the command to have the images inlined. See "gloss2html.pl for standalone Gloss files.html" for details.

You can put images in any indexed folder, and their file names will be found wherever they are mentioned.

If you have two different images with the same file name, you can add a bit of the path leading up to the image in order to tell Gloss which image you mean by providing some context. For example, if you wanted the /project51/images/ version of an image called interface.png, in general you could put project51/images/interface.png or just project51/interface.png as the mention. That would pin down which image to show, unless of course you have another /project51/ folder somewhere - in that rare case, you'd need more of the path to tell Gloss which is which. If the mention is in a file that's inside the project51 folder, then just interface.png should do the job. This is the same as for source and text file links.

As implemented in IntraMine's Viewer, Gloss will also look for images in a specific default directory if no partial path is given and the image isn't found in an indexed location. This is the directory specified by "COMMON_IMAGES_DIR" in IntraMine's data/intramine_config.txt file. The default path is C:\common\images\, and you can change it if you want. If you don't want to put images in a default directory, you certainly don't have to. It's handy though if you use a screen capture app such as Greenshot, where you can set it up to take a screen shot, give it a default name, save the image in a default location, and put the file path on your clipboard.

---
contents.txt
---
