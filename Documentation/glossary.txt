This is an example of a glossary that can accompany a set of standalone HTML files generated by IntraMine's gloss2html.pl. It should be called "glossary.txt" and be in the same folder as the documents that hold related text files that will be converted to HTML. The glossary is used to generate "tooltip" explanations in standalone Gloss files wherever terms in the glossary are mentioned, as generated by gloss2html.pl. Entries are not in order.

Format is the term being defined, at the start of a new line, followed by a colon. What follows the colon is the definition for the term. The term being defined can have up to four words. The definition can go on for more than one paragraph, but remember it has to fit in a "tooltip" window.

Note if you want a backslash, use two of them in a row.

Swarm server: A service written to run under IntraMine. A server is a "swarm" server if it uses "swarmserver.pm" to answer HTTP requests, and communicate with other services, including IntraMine's main service.

Main server: IntraMine's round-robin redirect server, intramine_main.pl. The Main server redirects requests to appropriate swarm servers, based on the Short name in the request, and can receive these requests directly or from a swarm server that can't handle a request. Main also handles requests to broadcast a signal to other IntraMine servers, by name or port or general type.

Short name: The unique name for an IntraMine service, as found in data/serverlist.txt. Each service should have its own unique name in the "Short name" column there.

Page name: This is set in the "Page name" column of data/serverlist.txt, and serves two purposes: it provides the name to display for the service in IntraMine's top navigation bar for top-level services, and it can be shared by several services to indicate that they are somehow associated - signals can be sent to all services that share the same Page name, for example. 

Top level: A service is "top level" and has an entry in the top navigation bar if its Page name and Short name are the same in data/serverlist.txt, and it's not marked there as a "BACKGROUND" service. A top level service will show up in IntraMine's top navigation bar.

The number of instances of a top level service to run is set by its "Count" field in serverlist.txt.

A top-level service can have second level services that it hands off to for specific tasks. For example, the Search page presents a list of hits with file links, and hands off to either the Viewer or Editor service when a link is clicked. The Viewer and Editor services are also called in response to clicks on the Files page links.

Second level: A second level service is called by a top level service to fulfill a specific need, such as viewing or editing a file. It has no entry in the navigation bar.

The number of instances of a second level service to run is set by its "Count" field in data/serverlist.txt.

Page service: A top level or second level service. Page services typically have JavaScript and can interact with users. There can be more than one of each. See data/serverlist.txt for a list of services.

Background service: has no navigation bar entry, and typically no JavaScript. It lurks in the background. Two are supplied with IntraMine: the Watcher service monitors the file system for changes, and SSE dispatches Server-Sent Events. There can be only one running instance of a background service. See data/serverlist.txt for a list of services.

NAS: Network Attached Storage. These are drives accessed over Ethernet, as opposed to locally attached storage which is connected directly to your PC via USB or SATA. IntraMine can index files on NAS, but cannot monitor them for changes, so static source files in a library are fine, but constantly changing source files in a project you're working on would require regular manual re-indexing in order for IntraMine to show up-to-date search results.

Locally attached storage: Storage attached directly to your computer, typically via USB or SATA. Drives on your network are called NAS (Network Attached Storage). IntraMine can index all source and text files on local storage, and also monitor them for changes and re-index.

Strawberry Perl: An open source version of Perl for Windows. See strawberryperl.com for details. IntraMine uses Strawberry Perl.

Elasticsearch: Arguably the best free search engine. IntraMine uses Elasticsearch for indexing source and text files, and searching them.

Gloss: Gloss resembles Markdown, and is certainly inspired by it, but the focus is on easy markup that produces HTML intranet documents rather than tolerable markup that produces HTML Internet documents. It's a combination of conventions for marking up your text and an HTML view generator. The Viewer service supplied with IntraMine applies Gloss fully to text (.txt) files, and to source files as much as it can. See Documentation/Gloss.txt for more.

Image hover, hover image, hover images: In IntraMine's file views and under the Files page, if you pause your cursor over a linked image name a view of the image will pop up. It goes away when you move your mouse away. You can tell if an image is linked, it has little yellow hummingbirds around it.

Image hovers: In IntraMine's file views and under the Files page, if you pause your cursor over a linked image name a view of the image will pop up. It goes away when you move your mouse away. You can tell if an image is linked, it has little yellow hummingbirds around it.

Viewer: IntraMine's read-only file viewer service, intramine_viewer.pl. The Viewer is used to show files when an ordinary link is clicked in Search page results, on the Files page, or any file link in a view. The Viewer puts in a Table of Contents, headings, autolinks, syntax highlighting for source files, tables and lists etc for source and text files. For more see "Documentation/Supplied services.txt#Viewer".

Editor: by default IntraMine's built-in Editor. CodeMirror-based, it has standard editing commands and implements autolinking for local files and web URLs, as well as image hovers.

Partial path: For IntraMine's autolinking, a partial path always includes the file name, and includes zero or more directories that are in its full path. Directories can be skipped, and can be out of order. Drive letter is also optional (but must of course be first if present).

For example, "project51/Cpp/main.cpp" would be a partial path for "P꞉\Cpp\OtherProjects\Project51\src\main.cpp". Under the right circumstances, it could uniquely identify the main.cpp wanted for linking.

Sufficient path: For IntraMine's autolinking, a sufficient path always includes the file name, and includes zero or more directories that are in its full path. Directories can be skipped, and can be out of order. Drive letter is also optional (but must of course be first if present).

For example, "project51/Cpp/main.cpp" would be a sufficient path for "P꞉\Cpp\OtherProjects\Project51\src\main.cpp". Under the right circumstances, it could uniquely identify the main.cpp wanted for linking.

Run as administrator: You can get a command prompt (console window) by putting a shortcut to "C:/Windows/System32/cmd.exe" on your desktop.

For a single run, right-click on the shortcut and select "Run as administrator".

And you can set it to always "Run as administrator" by right-clicking on the shortcut for Properties, and then clicking on the "Run as administrator" checkbox under the Shortcut tab's Advanced... button.

Map network drive: Open a File Explorer window, click on "This PC" on the left, and then select "Map network drive" at the top. Enter the \\\\host-name\\share-name you want to map, and then select a drive letter to map it to on the PC you're sitting at. Whether or not you'll want to reconnect using a different account is up to you, depending on how you've set things up.

Autolinks, automatic links, automatic linking: Briefly, IntraMine uses a complete list of paths to Elasticsearch-indexed files, and the notion of "context", which is the folder containing the file where you are mentioning some other file, to generate a hyperlink to the file without your needing to type the full path to the file, or any special characters. Though putting links in double quotes helps readability in the original text.

You can also autolink to headings within other files, such as "Gloss.txt#Gloss vs MultiMarkdown tables".

That was a bit brief wasn't it? Please see Gloss.txt and Linker.txt in IntraMine's Documentation folder for more details and some examples.

Server-Sent Events: (SSE for short) basically, a web page subscribes to a service for specific events, and the service publishes messages to the subscribed pages. IntraMine used to use these, but now WebSockets are used instead.

Command prompt: The flashing insertion point in the window that comes up when you run "C:\\Windows\\System32\cmd.exe"

Console window: The window you can type commands in when you run "C:\\Windows\\System32\\cmd.exe". To make life easier, once you've found it put a shortcut to it on your desktop. You can have two shortcuts, and set one of them to always "Run as administrator" (to do that, right-click and then Properties->Shortcut->Advanced... and check "Run as administrator").

Navigation bar: "topnav.png".

Status page: "2020-02-27 22_40_46-Status.png".

Context aware, context-aware: IntraMine will automatically put links in your source and text files where files are mentioned. If a file name such as "main.cpp" is used for many files, we need some way to pin down which "main.cpp" is meant. IntraMine does this in two ways: you can provide enough of a sufficient path leading up to the file, such as "project51/src/main.pp", that only one indexed file matches that sufficient path; or, if you mean the main.cpp that's "closest" to the file where you've mentioned it, then that's the one IntraMine will pick by default, and only the file name is needed.

"Closest" uses the folder notion of distance, where a step up to a parent folder or a step down into a child folder counts as one step.

If you're writing in project51/docs/Scrum notes Dec 1 2019.txt, for example, and you mention main.cpp, then IntraMine will pick project51/src/main.cpp if that is indeed the "closest" instance of main.cpp, at only two steps away (up from docs to project51, then down into src).

See also the "Links" section in Gloss.txt.

gloss2html.pl: A Perl program supplied with IntraMine that converts .txt files to completely self-contained moderately attractive HTML files, applying Gloss (with some restrictions on linking). Converted files can be copied to any folder, emailed, etc, and viewed using any browser.

You can convert one file, or a whole folder. Images can be of the "pop up on hover" sort, or inlined in the text. If you supply a glossary.txt file, popup hints will appear for any glossary item mentions in your converted files.

There are the usual Gloss features. If you click on a word, it will be highlighted throughout the document; there's an auto-scrolling table of contents down the left; mentions of other section titles in a document become links if placed in double quotes; mentions of other documents in the folder being converted become links; and there are tables, headings, lists etc. See Gloss.txt and gloss2html.pl at the top for more.

WebSockets: like HTTP, but it allows two-way communications, and easy communications between web clients.

CTRL+C: "tenor.gif".
